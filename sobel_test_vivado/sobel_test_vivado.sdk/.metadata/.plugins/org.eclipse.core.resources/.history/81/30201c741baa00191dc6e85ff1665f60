
#include <malloc.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "sobel.h"
#include "base.h"
#include "sobel_hw.h"

//Arrays to send and receive data from the accelerator
//AXI_PIXEL in_pix[MAX_HEIGHT][MAX_WIDTH];
//AXI_PIXEL out_pix[MAX_HEIGHT][MAX_WIDTH];

int main () {
  char *tempbuf;
  char *tempbuf1;
  int check_results = 0;

  tempbuf = (char *)malloc(2000 * sizeof(char));
  tempbuf1 = (char *)malloc(2000 * sizeof(char));


  // Arrays to store image data
  unsigned char *R;
  unsigned char *G;
  unsigned char *B;
  

  R = (unsigned char *)malloc(MAX_HEIGHT * MAX_WIDTH * sizeof(unsigned char));
  G = (unsigned char *)malloc(MAX_HEIGHT * MAX_WIDTH * sizeof(unsigned char));
  B = (unsigned char *)malloc(MAX_HEIGHT * MAX_WIDTH * sizeof(unsigned char));

  //Get image data from disk
  sprintf(tempbuf, "%s.bmp", INPUT_IMAGE_BASE);
  printf("Read img %s\n",tempbuf);
  // Fill a frame with data
  int read_tmp = BMP_Read(tempbuf, MAX_HEIGHT, MAX_WIDTH, R, G, B);
  if(read_tmp != 0) {
    printf("%s Loading image failed\n", tempbuf);
    exit (1);
  }
  printf("Read img ok\n");
  
//  copy_mem2dev(R, G, B, MAX_WIDTH, MAX_HEIGHT, 0x12000000);
//
//  memset(R,0,MAX_HEIGHT * MAX_WIDTH);
//  memset(G,0,MAX_HEIGHT * MAX_WIDTH);
//  memset(B,0,MAX_HEIGHT * MAX_WIDTH);
//
//  copy_dev2mem(R, G, B, MAX_WIDTH, MAX_HEIGHT,0x12000000);

//  PR_Decoupler(1);
  copy_mem2dev(R, G, B, MAX_WIDTH, MAX_HEIGHT, 0x10000000);
  SOBEL_HW(MAX_WIDTH, MAX_HEIGHT);
  DMA_HW(MAX_WIDTH,MAX_HEIGHT,0x10000000,0x12000000);
  copy_dev2mem(R, G, B, MAX_WIDTH, MAX_HEIGHT,0x12000000);


  //Write the image back to disk
  sprintf(tempbuf1, "%s.bmp", OUTPUT_IMAGE_BASE);
  int write_tmp = BMP_Write(tempbuf1, MAX_HEIGHT, MAX_WIDTH, R, G, B);
  if(write_tmp != 0){
    printf("WriteBMP %s failed\n", tempbuf);
    exit(1);
  }

  free(R);
  free(G);
  free(B);
  free(tempbuf);
  free(tempbuf1);
  printf("Complete\n");

  return check_results;
}
