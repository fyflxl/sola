/*
 * Empty C++ Application
 */
#include "axilite_hw.h"

//int main()
//{
//	int x;
//	for(x=0; x<16; x++)
//	{
//		AXILITE_HW(x);
//	}
//	return 0;
//}

double what_time_is_it_now()
{
    struct timeval time;
    if (gettimeofday(&time,NULL)){
        return 0;
    }
    return (double)time.tv_sec + (double)time.tv_usec * .000001;
}

int main()
{
	unsigned long int PhysicalAddress = AXILITE_BASEADDR;
	int map_len = 0x20;
	int fd = open("/dev/mem", O_RDWR);

	unsigned char *xbase_address;
	xbase_address = (unsigned char *)mmap(NULL, map_len, PROT_READ | PROT_WRITE, MAP_SHARED, fd, (off_t)PhysicalAddress);
	if(xbase_address == MAP_FAILED)
	{
		perror("Sobel Init Mapping memory for absolute memory access failed.\n");
		return;
	}

	int x;
	for(x=0; x<10000; x++)
	{
		WriteReg(xbase_address, AXILITE_TEST_S00_AXI_SLV_REG0_OFFSET, x);
		ReadReg(xbase_address, AXILITE_TEST_S00_AXI_SLV_REG0_OFFSET);
	}

//    printf("Read Reg0 %x\n", ReadReg(xbase_address, AXILITE_TEST_S00_AXI_SLV_REG0_OFFSET));


	munmap((void *)xbase_address, map_len);
	close(fd);
	return 0;
}
